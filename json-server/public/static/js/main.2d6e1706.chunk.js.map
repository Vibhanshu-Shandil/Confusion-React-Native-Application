{"version":3,"sources":["components/LoadingComponent.js","shared/baseUrl.js","components/MenuComponent.js","components/HeaderComponent.js","components/FooterComponent.js","components/HomeComponent.js","components/ContactComponent.js","components/DishdetailComponent.js","components/AboutComponent.js","redux/ActionCreators.js","redux/ActionTypes.js","components/MainComponent.js","redux/dishes.js","redux/comments.js","redux/leaders.js","redux/promotions.js","redux/forms.js","App.js","redux/configureStore.js","serviceWorker.js","index.js"],"names":["Loading","className","baseUrl","RenderMenyItem","dish","to","id","width","src","image","alt","name","Menu","props","menu","dishes","map","key","isLoading","errMess","active","Header","toggleNav","bind","toggleModal","handleLogin","state","isNavOpen","isModalOpen","this","setState","event","alert","username","value","password","remember","checked","preventDefault","isOpen","toggle","onSubmit","htmlFor","type","innerRef","input","check","color","dark","expand","onClick","href","height","navbar","outline","Component","Footer","RenderCard","item","designation","description","Home","dishesLoading","dishesErrMess","promotion","promoLoading","promoErrMess","leader","leadersLoading","leadersErrMess","required","val","length","maxLength","len","minLength","isNumber","isNaN","Number","validEmail","test","Contact","handleSubmit","values","postFeedback","firstname","lastname","telnum","email","agree","contactType","message","resetFeedbackForm","role","model","md","text","placeholder","validators","show","messages","size","offset","checkbox","select","textarea","rows","RenderDish","in","transformProps","exitTransform","top","RenderComments","comments","postComment","dishId","comment","author","Intl","DateTimeFormat","year","month","day","format","Date","parse","date","CommentForm","rating","DishDetail","RenderLeader","leaders","tag","left","object","body","heading","About","title","list","dishesFailed","errmess","payload","addDishes","commentsFailed","addComments","promosLoading","promosFailed","addPromos","promos","leadersFailed","addLeaders","Main","fetchDishes","fetchComments","fetchPromos","fetchLeaders","location","classNames","timeout","path","component","filter","featured","dishErrMess","promotions","promo","exact","match","parseInt","params","commentsErrMess","withRouter","connect","dispatch","newComment","toISOString","fetch","method","JSON","stringify","headers","credentials","then","response","ok","error","Error","status","statusText","json","addComment","catch","newFeedback","actions","reset","Dishes","action","Comments","concat","Leaders","Promotions","InitialFeedback","store","createStore","combineReducers","createForms","feedback","applyMiddleware","thunk","logger","App","React","Boolean","window","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","console"],"mappings":"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","file":"static/js/main.2d6e1706.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport const Loading = () => {\r\n    return (\r\n        <div className=\"col-12\">\r\n            <span className=\"fa fa-spinner fa-pulse fa-3x fa-fw text-primary\"></span>\r\n            <p>Loading....</p>\r\n        </div>\r\n    );\r\n}","export const baseUrl = 'http://localhost:3001/';","import React from 'react';\r\nimport { Card, CardImg, CardImgOverlay, CardTitle, Breadcrumb, BreadcrumbItem } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { Loading } from './LoadingComponent';\r\nimport { baseUrl } from '../shared/baseUrl';\r\n\r\nfunction RenderMenyItem ({dish}) {\r\n  return(\r\n    <Card>\r\n      <Link to={`/menu/${dish.id}`}>\r\n        <CardImg width=\"100%\" src={baseUrl + dish.image} alt={dish.name} />\r\n        <CardImgOverlay>\r\n            <CardTitle>{dish.name}</CardTitle>\r\n        </CardImgOverlay>\r\n      </Link>\r\n    </Card>\r\n  );\r\n}\r\n\r\nconst Menu = (props) => {\r\n  const menu = props.dishes.dishes.map((dish) => {\r\n    return (\r\n      <div  className=\"col-12 col-md-5 m-1\" key={dish.id}>\r\n        <RenderMenyItem dish={dish} />\r\n      </div>\r\n    );\r\n  }); \r\n\r\n  if(props.dishes.isLoading) {\r\n    return(\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <Loading />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  else if(props.dishes.errMess) {\r\n    return(\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <h4>{props.dishes.errMess}</h4>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  else\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n            <Breadcrumb>\r\n                <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\r\n                <BreadcrumbItem active>Menu</BreadcrumbItem>\r\n            </Breadcrumb>\r\n            <div className=\"col-12\">\r\n                <h3>Menu</h3>\r\n                <hr />\r\n            </div>                \r\n        </div>\r\n        <div className=\"row\">\r\n              {menu}\r\n        </div>\r\n      </div>\r\n    );\r\n}\r\n    \r\n  \r\nexport default Menu;","import React, { Component } from 'react';\r\nimport { Navbar, NavbarBrand, Nav, NavbarToggler, Collapse, NavItem, Jumbotron, \r\n    Button, Modal, ModalBody, ModalHeader, Form, FormGroup, Input, Label } from 'reactstrap';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nclass Header extends Component {\r\n\r\n    constructor(props) {\r\n        super(props); \r\n\r\n        this.toggleNav = this.toggleNav.bind(this);   //used instead of () => or other way of it\r\n        this.toggleModal = this.toggleModal.bind(this);\r\n        this.handleLogin = this.handleLogin.bind(this);\r\n        this.state = {\r\n          isNavOpen: false,\r\n          isModalOpen: false\r\n        };\r\n    }\r\n\r\n    toggleNav() {\r\n        this.setState({\r\n          isNavOpen: !this.state.isNavOpen\r\n        });\r\n    }\r\n\r\n    toggleModal() {\r\n          this.setState({\r\n            isModalOpen: !this.state.isModalOpen\r\n          });\r\n    }\r\n\r\n    handleLogin(event) {\r\n        this.toggleModal();\r\n        alert(\"Username: \" + this.username.value + \" Password: \" + this.password.value\r\n            + \" Remember: \" + this.remember.checked);\r\n        event.preventDefault();\r\n\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <>\r\n                <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\r\n                    <ModalHeader toggle={this.toggleModal}>Login</ModalHeader>\r\n                    <ModalBody>\r\n                        <Form onSubmit={this.handleLogin}>\r\n                            <FormGroup>\r\n                                <Label htmlFor=\"username\">Username</Label>\r\n                                <Input type=\"text\" id=\"username\" name=\"username\"\r\n                                    innerRef={(input) => this.username = input} />\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <Label htmlFor=\"password\">Password</Label>\r\n                                <Input type=\"password\" id=\"password\" name=\"password\"\r\n                                    innerRef={(input) => this.password = input}  />\r\n                            </FormGroup>\r\n                            <FormGroup check>\r\n                                <Label check>\r\n                                    <Input type=\"checkbox\" name=\"remember\"\r\n                                    innerRef={(input) => this.remember = input}  />\r\n                                    Remember me\r\n                                </Label>\r\n                            </FormGroup>\r\n                            <Button type=\"submit\" value=\"submit\" color=\"primary\">Login</Button>\r\n                        </Form>\r\n                    </ModalBody>\r\n                </Modal>\r\n                <Navbar dark expand=\"md\">\r\n                    <div className=\"container\">\r\n                        <NavbarToggler onClick={this.toggleNav} />\r\n                        <NavbarBrand className=\"mr-auto\" href=\"/\"><img src='assets/images/logo.png' height=\"30\" width=\"41\" alt='Ristorante Con Fusion' /></NavbarBrand>\r\n                        <Collapse isOpen={this.state.isNavOpen} navbar>\r\n                            <Nav navbar>\r\n                            <NavItem>\r\n                                <NavLink className=\"nav-link\"  to='/home'><span className=\"fa fa-home fa-lg\"></span> Home</NavLink>\r\n                            </NavItem>\r\n                            <NavItem>\r\n                                <NavLink className=\"nav-link\" to='/aboutus'><span className=\"fa fa-info fa-lg\"></span> About Us</NavLink>\r\n                            </NavItem>\r\n                            <NavItem>\r\n                                <NavLink className=\"nav-link\"  to='/menu'><span className=\"fa fa-list fa-lg\"></span> Menu</NavLink>\r\n                            </NavItem>\r\n                            <NavItem>\r\n                                <NavLink className=\"nav-link\" to='/contactus'><span className=\"fa fa-address-card fa-lg\"></span> Contact Us</NavLink>\r\n                            </NavItem>\r\n                            </Nav>\r\n                        </Collapse>\r\n                        <Nav className=\"ml-auto\" navbar>\r\n                                <NavItem>\r\n                                    <Button outline onClick={this.toggleModal}><span className=\"fa fa-sign-in fa-lg\"></span> Login</Button>\r\n                                </NavItem>\r\n                        </Nav>\r\n                    </div>\r\n                </Navbar>\r\n                <Jumbotron>\r\n                    <div className=\"container\">\r\n                        <div className=\"row row-header\">\r\n                            <div className=\"col-12 col-sm-6\">\r\n                                <h1>Ristorante con Fusion</h1>\r\n                                <p>We take inspiration from the World's best cuisines, and create a unique fusion experience. Our lipsmacking creations will tickle your culinary senses!</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </Jumbotron>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction Footer(props) {\r\n    return(\r\n        <div className=\"footer\">\r\n        <div className=\"container\">\r\n            <div className=\"row justify-content-center\">             \r\n                <div className=\"col-4 offset-1 col-sm-2\">\r\n                    <h5>Links</h5>\r\n                    <ul className=\"list-unstyled\">\r\n                    <li><Link to='/home'>Home</Link></li>\r\n                        <li><Link to='/aboutus'>About Us</Link></li>\r\n                        <li><Link to='/menu'>Menu</Link></li>\r\n                        <li><Link to='/contactus'>Contact Us</Link></li>\r\n                    </ul>\r\n                </div>\r\n                <div className=\"col-7 col-sm-5\">\r\n                    <h5>Our Address</h5>\r\n                    <address>\r\n\t\t              121, Clear Water Bay Road<br />\r\n\t\t              Clear Water Bay, Kowloon<br />\r\n\t\t              HONG KONG<br />\r\n\t\t              <i className=\"fa fa-phone fa-lg\"></i>: +852 1234 5678<br />\r\n\t\t              <i className=\"fa fa-fax fa-lg\"></i>: +852 8765 4321<br />\r\n\t\t              <i className=\"fa fa-envelope fa-lg\"></i>: <a href=\"mailto:confusion@food.net\">\r\n                         confusion@food.net</a>\r\n                    </address>\r\n                </div>\r\n                <div className=\"col-12 col-sm-4 align-self-center\">\r\n                    <div className=\"text-center\">\r\n                        <a className=\"btn btn-social-icon btn-google\" href=\"http://google.com/+\"><i className=\"fa fa-google-plus\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-facebook\" href=\"http://www.facebook.com/profile.php?id=\"><i className=\"fa fa-facebook\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-linkedin\" href=\"http://www.linkedin.com/in/\"><i className=\"fa fa-linkedin\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-twitter\" href=\"http://twitter.com/\"><i className=\"fa fa-twitter\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-google\" href=\"http://youtube.com/\"><i className=\"fa fa-youtube\"></i></a>\r\n                        <a className=\"btn btn-social-icon\" href=\"mailto:\"><i className=\"fa fa-envelope-o\"></i></a>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"row justify-content-center\">             \r\n                <div className=\"col-auto\">\r\n                    <p>© Copyright 2018 Ristorante Con Fusion</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    );\r\n}\r\n\r\nexport default Footer;","import React from 'react';\r\nimport { Card, CardImg, CardText, CardBody,CardTitle, CardSubtitle} from 'reactstrap';\r\nimport { Loading } from './LoadingComponent';\r\nimport { baseUrl } from '../shared/baseUrl';\r\n\r\nfunction RenderCard ({item,isLoading, errMess}) {\r\n    if (isLoading) {\r\n        return (\r\n            <Loading />\r\n        );\r\n    }\r\n    else if (errMess) {\r\n        return (\r\n            <h4>{errMess}</h4>\r\n        );\r\n    }\r\n    else\r\n        return(\r\n                <Card>\r\n                    <CardImg src={baseUrl + item.image} alt={item.name} />\r\n                    <CardBody>\r\n                    <CardTitle>{item.name}</CardTitle>\r\n                    {item.designation ? <CardSubtitle>{item.designation}</CardSubtitle> : null }\r\n                    <CardText>{item.description}</CardText>\r\n                    </CardBody>\r\n                </Card>\r\n        );\r\n}\r\n\r\nfunction Home(props) {\r\n    return(\r\n        <div className=\"container\">\r\n            <div className=\"row mt-5 mb-5 align-items-start\">\r\n                <div className=\"col-12 col-md m-1\">\r\n                    <RenderCard item={props.dish} isLoading={props.dishesLoading} errMess={props.dishesErrMess} />\r\n                </div>\r\n                <div className=\"col-12 col-md m-1\">\r\n                    <RenderCard item={props.promotion} isLoading={props.promoLoading} errMess={props.promoErrMess} />\r\n                </div>\r\n                <div className=\"col-12 col-md m-1\">\r\n                    <RenderCard item={props.leader} isLoading={props.leadersLoading} errMess={props.leadersErrMess} />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Home;","import React, { Component } from 'react';\r\nimport { Breadcrumb, BreadcrumbItem, Button, Label, Col, Row } from 'reactstrap';\r\nimport { Control, Form, Errors, actions } from 'react-redux-form';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst required = (val) => val && val.length;\r\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\r\nconst minLength = (len) => (val) => val && (val.length >= len);\r\nconst isNumber = (val) => !isNaN(Number(val));\r\nconst validEmail = (val) => /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\r\n\r\nclass Contact extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    handleSubmit(values) {\r\n        \r\n        this.props.postFeedback(values.firstname, values.lastname, values.telnum, values.email, values.agree, values.contactType, values.message);\r\n        this.props.resetFeedbackForm();\r\n        //event.preventDefault();\r\n    }\r\n    \r\n\r\n    render () {\r\n        return(\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Breadcrumb>\r\n                        <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\r\n                        <BreadcrumbItem active>Contact Us</BreadcrumbItem>\r\n                    </Breadcrumb>\r\n                    <div className=\"col-12\">\r\n                        <h3>Contact Us</h3>\r\n                        <hr />\r\n                    </div>                \r\n                </div>\r\n                <div className=\"row row-content\">\r\n                    <div className=\"col-12\">\r\n                    <h3>Location Information</h3>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-4 offset-sm-1\">\r\n                            <h5>Our Address</h5>\r\n                            <address>\r\n                            121, Clear Water Bay Road<br />\r\n                            Clear Water Bay, Kowloon<br />\r\n                            HONG KONG<br />\r\n                            <i className=\"fa fa-phone\"></i>: +852 1234 5678<br />\r\n                            <i className=\"fa fa-fax\"></i>: +852 8765 4321<br />\r\n                            <i className=\"fa fa-envelope\"></i>: <a href=\"mailto:confusion@food.net\">confusion@food.net</a>\r\n                            </address>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-6 offset-sm-1\">\r\n                        <h5>Map of our Location</h5>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-11 offset-sm-1\">\r\n                        <div className=\"btn-group\" role=\"group\">\r\n                            <a role=\"button\" className=\"btn btn-primary\" href=\"tel:+85212345678\"><i className=\"fa fa-phone\"></i> Call</a>\r\n                            <a role=\"button\" className=\"btn btn-info\"><i className=\"fa fa-skype\"></i> Skype</a>\r\n                            <a role=\"button\" className=\"btn btn-success\" href=\"mailto:confusion@food.net\"><i className=\"fa fa-envelope-o\"></i> Email</a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row row-content\">\r\n                    <div className=\"col-12\">\r\n                        <h3>Send us your Feedback</h3>\r\n                    </div>\r\n                    <div className=\"col-12 col-md-9\">\r\n                        <Form model=\"feedback\" onSubmit={(values) => this.handleSubmit(values)}>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"firstname\" md={2}>First Name*</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".firstname\" id=\"firstname\" name=\"firstname\" \r\n                                    placeholder=\"First Name\"\r\n                                    className=\"form-control\"validators={{\r\n                                        required, minLength: minLength(3), maxLength: maxLength(15)\r\n                                    }}\r\n                                     />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".firstname\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than 2 characters',\r\n                                            maxLength: 'Must be 15 characters or less'\r\n                                        }}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"lastname\" md={2}>Last Name</Label>\r\n                                    <Col md={10}>\r\n                                        <Control.text model=\".lastname\" id=\"lastname\" name=\"lastname\"\r\n                                            placeholder=\"Last Name\"\r\n                                            className=\"form-control\"\r\n                                            validators={{\r\n                                                required, minLength: minLength(3), maxLength: maxLength(15)\r\n                                            }}\r\n                                            />\r\n                                        <Errors\r\n                                            className=\"text-danger\"\r\n                                            model=\".lastname\"\r\n                                            show=\"touched\"\r\n                                            messages={{\r\n                                                required: 'Required',\r\n                                                minLength: 'Must be greater than 2 characters',\r\n                                                maxLength: 'Must be 15 characters or less'\r\n                                            }}\r\n                                        />\r\n                                    </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"telnum\" md={2}>Contact Tel.</Label>\r\n                                    <Col md={10}>\r\n                                    <Control.text model=\".telnum\" id=\"telnum\" name=\"telnum\"\r\n                                        placeholder=\"Tel. Number\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength: minLength(10), maxLength: maxLength(13), isNumber\r\n                                        }}\r\n                                         />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".telnum\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than 10 numbers',\r\n                                            maxLength: 'Must be 13 numbers or less',\r\n                                            isNumber: 'Must be a number'\r\n                                        }}\r\n                                     />\r\n                                    </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                            <Label htmlFor=\"email\" md={2}>Email</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".email\" id=\"email\" name=\"email\"\r\n                                        placeholder=\"Email\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, validEmail\r\n                                        }} />\r\n                                    <Errors className=\"text-danger\"\r\n                                        model=\".email\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            validEmail: 'Invalid Email Address'\r\n                                        }} />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col md={{size: 6, offset: 2}}>\r\n                                    <div className=\"form-check\">\r\n                                        <Label check>\r\n                                            <Control.checkbox model=\".agree\" name=\"agree\"\r\n                                                className=\"form-check-input\"\r\n                                                 /> {' '}\r\n                                                <strong>May we contact you?</strong>\r\n                                        </Label>\r\n                                    </div>\r\n                                </Col>\r\n                                <Col md={{size: 3, offset: 1}} >\r\n                                    <Control.select model=\".contactType\" name=\"contactType\"\r\n                                        className=\"form-control\">\r\n                                        <option>Tel.</option>\r\n                                        <option>Email</option>\r\n                                    </Control.select>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"message\" md={2}>Your Feedback*</Label>\r\n                                <Col md={10}>\r\n                                    <Control.textarea model=\".message\" id=\"message\" name=\"message\"\r\n                                        rows=\"12\"\r\n                                        className=\"form-control\" />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col md={{size: 10, offset: 2}}>\r\n                                    <Button type=\"submit\" color=\"primary\">\r\n                                        Send Feedback\r\n                                    </Button>\r\n                                </Col>\r\n                            </Row>\r\n                        </Form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    \r\n}\r\n\r\nexport default Contact;","import React, { Component } from 'react';\r\nimport { Card, CardImg, CardText, CardTitle, CardBody, BreadcrumbItem, Breadcrumb,\r\n    Button, Modal, ModalBody, ModalHeader, Col, Row, Label } from 'reactstrap';\r\nimport { LocalForm, Control, Errors } from 'react-redux-form';\r\nimport { Link } from 'react-router-dom';\r\nimport { Loading } from './LoadingComponent';\r\nimport { baseUrl } from '../shared/baseUrl';\r\nimport { FadeTransform, Fade, Stagger } from 'react-animation-components';\r\n    \r\nfunction RenderDish({dish}) {\r\n    if (dish != null) {\r\n        return(\r\n            <div className=\"col-12 col-md-5 m-1\">\r\n                <FadeTransform in transformProps={{\r\n                        exitTransform: 'scale(0.5) translateY(-50%)'\r\n                    }}>\r\n                    <Card>\r\n                        <CardImg top src={baseUrl + dish.image} alt={dish.name} />\r\n                        <CardBody>\r\n                        <CardTitle>{dish.name}</CardTitle>\r\n                        <CardText>{dish.description}</CardText>\r\n                        </CardBody>\r\n                    </Card>\r\n                </FadeTransform>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nfunction RenderComments({comments, postComment, dishId}) {\r\n    if (comments != null) {\r\n        return(\r\n            <div className=\"col-12 col-md-5 m-1\">\r\n                <h4>Comments</h4>\r\n                <ul className=\"list-unstyled\">\r\n                    <Stagger in>\r\n                        {comments.map((comment) => {\r\n                            return (\r\n                                <Fade in>\r\n                                    <li key={comment.id}>\r\n                                        <p>{comment.comment}</p>\r\n                                        <p>-- {comment.author}, {new Intl.DateTimeFormat('en-US', { year: 'numeric', month: 'short', day: '2-digit'}).format(new Date(Date.parse(comment.date)))}</p>\r\n                                    </li>\r\n                                </Fade>\r\n                            );\r\n                        })}\r\n                    </Stagger>\r\n                </ul>\r\n                <CommentForm dishId={dishId} postComment={postComment} />\r\n            </div>\r\n        );\r\n    }\r\n    else\r\n        return(\r\n            <div></div>\r\n        );\r\n}\r\n\r\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\r\nconst minLength = (len) => (val) => val && (val.length >= len);\r\n\r\nclass CommentForm extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.toggleModal = this.toggleModal.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.state = {\r\n          isModalOpen: false\r\n        };\r\n    }\r\n    \r\n    toggleModal() {\r\n        this.setState({\r\n          isModalOpen: !this.state.isModalOpen\r\n        });\r\n    }\r\n    \r\n    handleSubmit(values){ \r\n        this.props.postComment(this.props.dishId, values.rating, values.author, values.comment);\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <>\r\n                <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\r\n                    <ModalHeader toggle={this.toggleModal}>Login</ModalHeader>\r\n                    <ModalBody>\r\n                        <LocalForm onSubmit={(values) => this.handleSubmit(values)}>\r\n                            <Row className=\"form-group\">\r\n                                <Col>\r\n                                    <Label htmlFor=\"rating\">Rating</Label>\r\n                                    <Control.select model=\".rating\" name=\"rating\"\r\n                                        className=\"form-control\">\r\n                                        <option values='1'>1</option>\r\n                                        <option value='2'>2</option>\r\n                                        <option value='3'>3</option>\r\n                                        <option value='4'>4</option>\r\n                                        <option value='5'>5</option>\r\n                                    </Control.select>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col>\r\n                                    <Label htmlFor=\"author\">Your Name</Label>\r\n                                    <Control.text model=\".author\" id=\"author\" name=\"author\" \r\n                                    placeholder=\"Your Name\"\r\n                                    className=\"form-control\"\r\n                                    validators={{\r\n                                        minLength: minLength(2), maxLength: maxLength(15)\r\n                                    }}\r\n                                     />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".author\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            minLength: 'Must be greater than 2 characters',\r\n                                            maxLength: 'Must be 15 characters or less'\r\n                                        }}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col>\r\n                                    <Label htmlFor=\"comment\">Comment</Label>\r\n                                    <Control.textarea model=\".comment\" id=\"comment\" name=\"comment\"\r\n                                        rows=\"6\"\r\n                                        className=\"form-control\" />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col>\r\n                                    <Button type=\"submit\" color=\"primary\">\r\n                                        Submit\r\n                                    </Button>\r\n                                </Col>\r\n                            </Row>\r\n                        </LocalForm>\r\n                    </ModalBody>\r\n                </Modal>\r\n                <Button className=\"primary\" outline onClick={this.toggleModal}><span className=\"fa fa-pencil fa-lg\"> Submit Comment</span></Button>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nconst DishDetail = (props) => {\r\n    if (props.isLoading) {\r\n        return(\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Loading />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    else if (props.errMess) {\r\n        return(\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <h4>{props.errMess}</h4>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    else if (props.dish != null)\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n                <Breadcrumb>\r\n                    <BreadcrumbItem><Link to=\"/menu\">Menu</Link></BreadcrumbItem>\r\n                    <BreadcrumbItem active>{props.dish.name}</BreadcrumbItem>\r\n                </Breadcrumb>\r\n                <div className=\"col-12\">\r\n                    <h3>{props.dish.name}</h3>\r\n                    <hr />\r\n                </div>                \r\n            </div>\r\n            <div className=\"row\">\r\n                <RenderDish dish={props.dish} />\r\n                <RenderComments comments={props.comments} \r\n                    postComment={props.postComment} \r\n                    dishId={props.dish.id}\r\n                />\r\n            </div>\r\n        </div>\r\n    );\r\n    else\r\n        return (\r\n            <div></div>\r\n        );\r\n}\r\n\r\n\r\nexport default DishDetail;","import React from 'react';\r\nimport { Breadcrumb, BreadcrumbItem, Card, CardBody, CardHeader, Media } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { Loading } from './LoadingComponent';\r\nimport { baseUrl } from '../shared/baseUrl';\r\nimport { Fade, Stagger } from 'react-animation-components';\r\n\r\nfunction RenderLeader ({leader, isLoading, errMess}) {\r\n\r\n    if (isLoading) {\r\n        return (\r\n            <Loading />\r\n        );\r\n    }\r\n    else if (errMess) {\r\n        return (\r\n            <h4>{errMess}</h4>\r\n        );\r\n    }\r\n    else {\r\n        return( \r\n            <div>\r\n                { leader.leaders.map((leader) => { \r\n                    return (\r\n                        <Stagger in>\r\n                            <Fade in>\r\n                                <Media tag=\"li\">\r\n                                    <Media left key={leader.id}>\r\n                                        <Media object className=\"mr-5\" src={baseUrl + leader.image} alt={leader.name} />\r\n                                    </Media>\r\n                                    <Media body>\r\n                                        <Media heading className=\"mt-0\">{leader.name}</Media>\r\n                                        <p>{leader.designation}</p>\r\n                                        <p>{leader.description}</p>\r\n                                    </Media>\r\n                                </Media> \r\n                            </Fade>\r\n                        </Stagger>\r\n                        );\r\n                    })\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nfunction About(props) {\r\n\r\n    return(\r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n                <Breadcrumb>\r\n                    <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\r\n                    <BreadcrumbItem active>About Us</BreadcrumbItem>\r\n                </Breadcrumb>\r\n                <div className=\"col-12\">\r\n                    <h3>About Us</h3>\r\n                    <hr />\r\n                </div>                \r\n            </div>\r\n            <div className=\"row row-content\">\r\n                <div className=\"col-12 col-md-6\">\r\n                    <h2>Our History</h2>\r\n                    <p>Started in 2010, Ristorante con Fusion quickly established itself as a culinary icon par excellence in Hong Kong. With its unique brand of world fusion cuisine that can be found nowhere else, it enjoys patronage from the A-list clientele in Hong Kong.  Featuring four of the best three-star Michelin chefs in the world, you never know what will arrive on your plate the next time you visit us.</p>\r\n                    <p>The restaurant traces its humble beginnings to <em>The Frying Pan</em>, a successful chain started by our CEO, Mr. Peter Pan, that featured for the first time the world's best cuisines in a pan.</p>\r\n                </div>\r\n                <div className=\"col-12 col-md-5\">\r\n                    <Card>\r\n                        <CardHeader className=\"bg-primary text-white\">Facts At a Glance</CardHeader>\r\n                        <CardBody>\r\n                            <dl className=\"row p-1\">\r\n                                <dt className=\"col-6\">Started</dt>\r\n                                <dd className=\"col-6\">3 Feb. 2013</dd>\r\n                                <dt className=\"col-6\">Major Stake Holder</dt>\r\n                                <dd className=\"col-6\">HK Fine Foods Inc.</dd>\r\n                                <dt className=\"col-6\">Last Year's Turnover</dt>\r\n                                <dd className=\"col-6\">$1,250,375</dd>\r\n                                <dt className=\"col-6\">Employees</dt>\r\n                                <dd className=\"col-6\">40</dd>\r\n                            </dl>\r\n                        </CardBody>\r\n                    </Card>\r\n                </div>\r\n                <div className=\"col-12\">\r\n                    <Card>\r\n                        <CardBody className=\"bg-faded\">\r\n                            <blockquote className=\"blockquote\">\r\n                                <p className=\"mb-0\">You better cut the pizza in four pieces because\r\n                                    I'm not hungry enough to eat six.</p>\r\n                                <footer className=\"blockquote-footer\">Yogi Berra,\r\n                                <cite title=\"Source Title\">The Wit and Wisdom of Yogi Berra,\r\n                                    P. Pepe, Diversion Books, 2014</cite>\r\n                                </footer>\r\n                            </blockquote>\r\n                        </CardBody>\r\n                    </Card>\r\n                </div>\r\n            </div>\r\n            <div className=\"row row-content\">\r\n                <div className=\"col-12\">\r\n                    <h2>Corporate Leadership</h2>\r\n                </div>\r\n                <div className=\"col-12\">\r\n                    <Media list>\r\n                        <RenderLeader leader={props.leaders} isLoading={props.leadersLoading} errMess={props.leadersErrMess} />\r\n                    </Media>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default About;    ","import * as ActionTypes from './ActionTypes';\r\nimport { baseUrl } from '../shared/baseUrl';\r\n\r\nexport const addComment = (comment) => ({\r\n    type: ActionTypes.ADD_COMMENT,\r\n    payload: comment\r\n});\r\n\r\n\r\nexport const postComment = (dishId, rating, author, comment) => (dispatch) => {\r\n    const newComment = {\r\n        dishId: dishId,\r\n        rating: rating,\r\n        author: author,\r\n        comment: comment\r\n    };\r\n    newComment.date = new Date().toISOString();\r\n\r\n    return fetch(baseUrl + \"comments\", {\r\n        method: \"POST\",\r\n        body: JSON.stringify(newComment),\r\n        headers: { \"Content-Type\": \"application/json\"},\r\n        credentials: \"same-origin\"\r\n    })\r\n        .then(response => {\r\n            if (response.ok) {\r\n                return response;\r\n            }\r\n            else {\r\n                var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n                error.response = response;\r\n                throw error;\r\n            }\r\n        },\r\n        error => {\r\n            var errmess = new Error(error.message);\r\n            throw errmess;\r\n        })\r\n        .then(response => response.json())\r\n        .then(response => dispatch(addComment(response)))\r\n        .catch(error => {\r\n            alert('Your comment could not be posted\\nError: ' + error.message);\r\n        });\r\n}\r\n\r\nexport const postFeedback = (firstname, lastname, telnum, email, agree, contactType, message) => (dispatch) => {\r\n    const newFeedback = {\r\n        firstname: firstname,\r\n        lastname: lastname,\r\n        telnum: telnum,\r\n        email: email,\r\n        agree: agree,\r\n        contactType: contactType,\r\n        message: message\r\n    };\r\n    newFeedback.date = new Date().toISOString();\r\n\r\n    return fetch(baseUrl + \"feedback\", {\r\n        method: \"POST\",\r\n        body: JSON.stringify(newFeedback),\r\n        headers: { \"Content-Type\": \"application/json\"},\r\n        credentials: \"same-origin\"\r\n    })\r\n        .then(response => {\r\n            if (response.ok) {\r\n                return response;\r\n            }\r\n            else {\r\n                var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n                error.response = response;\r\n                throw error;\r\n            }\r\n        },\r\n        error => {\r\n            var errmess = new Error(error.message);\r\n            throw errmess;\r\n        })\r\n        .then(response => response.json())\r\n        .then(response => alert(JSON.stringify(response)))\r\n        .catch(error => {\r\n            alert('Your feedback could not be posted\\nError: ' + error.message);\r\n        });\r\n}\r\n\r\nexport const fetchDishes = () => (dispatch) => {\r\n    dispatch(dishesLoading(true));\r\n\r\n    return fetch(baseUrl + 'dishes')\r\n        .then(response => {\r\n            if (response.ok) {\r\n                return response;\r\n            }\r\n            else {\r\n                var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n                error.response = response;\r\n                throw error;\r\n            }\r\n        },\r\n        error => {\r\n            var errmess = new Error(error.message);\r\n            throw errmess;\r\n        })\r\n        .then(response => response.json())\r\n        .then(dishes => dispatch(addDishes(dishes)))\r\n        .catch(error => dispatch(dishesFailed(error.message)));\r\n\r\n}\r\n\r\nexport const fetchComments = () => (dispatch) => {    \r\n    return fetch(baseUrl + 'comments')\r\n        .then(response => {\r\n            if (response.ok) {\r\n                return response;\r\n            }\r\n            else {\r\n                var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n                error.response = response;\r\n                throw error;\r\n            }\r\n        },\r\n        error => {\r\n            var errmess = new Error(error.message);\r\n            throw errmess;\r\n        })\r\n        .then(response => response.json())\r\n        .then(comments => dispatch(addComments(comments)))\r\n        .catch(error => dispatch(commentsFailed(error.message)));\r\n}\r\n\r\nexport const fetchPromos = () => (dispatch) => {\r\n    dispatch(promosLoading(true));\r\n\r\n    return fetch(baseUrl + 'promotions')\r\n        .then(response => {\r\n            if (response.ok) {\r\n                return response;\r\n            }\r\n            else {\r\n                var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n                error.response = response;\r\n                throw error;\r\n            }\r\n        },\r\n        error => {\r\n            var errmess = new Error(error.message);\r\n            throw errmess;\r\n        })\r\n        .then(response => response.json())\r\n        .then(promos => dispatch(addPromos(promos)))\r\n        .catch(error => dispatch(promosFailed(error.message)));\r\n}\r\n\r\nexport const fetchLeaders = () => (dispatch) => {\r\n    dispatch(leadersLoading(true));\r\n\r\n    return fetch(baseUrl + 'leaders')\r\n        .then(response => {\r\n            if (response.ok) {\r\n                return response;\r\n            }\r\n            else {\r\n                var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n                error.response = response;\r\n                throw error;\r\n            }\r\n        },\r\n        error => {\r\n            var errmess = new Error(error.message);\r\n            throw errmess;\r\n        })\r\n        .then(response => response.json())\r\n        .then(leaders => dispatch(addLeaders(leaders)))\r\n        .catch(error => dispatch(leadersFailed(error.message)));\r\n}\r\n\r\nexport const dishesLoading = () => ({\r\n    type: ActionTypes.DISHES_LOADING\r\n});\r\n\r\nexport const dishesFailed = (errmess) => ({\r\n    type: ActionTypes.DISHES_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addDishes = (dishes) => ({\r\n    type: ActionTypes.ADD_DISHES,\r\n    payload: dishes\r\n});\r\n\r\nexport const commentsFailed = (errmess) => ({\r\n    type: ActionTypes.COMMENTS_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addComments = (comments) => ({\r\n    type: ActionTypes.ADD_COMMENTS,\r\n    payload: comments\r\n});\r\n\r\nexport const promosLoading = () => ({\r\n    type: ActionTypes.PROMOS_LOADING\r\n});\r\n\r\nexport const promosFailed = (errmess) => ({\r\n    type: ActionTypes.PROMOS_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addPromos = (promos) => ({\r\n    type: ActionTypes.ADD_PROMOS,\r\n    payload: promos\r\n});\r\n\r\nexport const leadersLoading = () => ({\r\n    type: ActionTypes.LEADERS_LOADING\r\n});\r\n\r\nexport const leadersFailed = (errmess) => ({\r\n    type: ActionTypes.LEADERS_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addLeaders = (leaders) => ({\r\n    type: ActionTypes.ADD_LEADERS,\r\n    payload: leaders\r\n});","export const ADD_COMMENT = 'ADD_COMMENT';\r\nexport const DISHES_LOADING = 'DISHES_LOADING';\r\nexport const DISHES_FAILED = 'DISHES_FAILED';\r\nexport const ADD_DISHES = 'ADD_DISHES';\r\nexport const ADD_COMMENTS = 'ADD_COMMENTS';\r\nexport const COMMENTS_FAILED = 'COMMENTS_FAILED';\r\nexport const PROMOS_LOADING = 'PROMOS_LOADING';\r\nexport const ADD_PROMOS = 'ADD_PROMOS';\r\nexport const PROMOS_FAILED = 'PROMOS_FAILED';\r\nexport const LEADERS_LOADING = 'LEADERS_LOADING';\r\nexport const ADD_LEADERS = 'ADD_LEADERS';\r\nexport const LEADERS_FAILED = 'LEADERS_FAILED';\r\nexport const ADD_FEEDBACK = 'ADD_FEEDBACK';","import React, { Component } from 'react';\r\nimport Menu from './MenuComponent';\r\nimport Header from './HeaderComponent';\r\nimport Footer from './FooterComponent';\r\nimport Home from './HomeComponent';\r\nimport Contact from './ContactComponent';\r\nimport DishDetail from './DishdetailComponent';\r\nimport About from './AboutComponent';\r\nimport { Switch, Route, Redirect, withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { postComment, fetchDishes, postFeedback } from '../redux/ActionCreators';\r\nimport { fetchComments, fetchPromos, fetchLeaders } from '../redux/ActionCreators';\r\nimport { actions } from 'react-redux-form';\r\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    dishes: state.dishes,\r\n    comments: state.comments,\r\n    promotions: state.promotions,\r\n    leaders: state.leaders\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  postComment: (dishId, rating, author, comment) => dispatch(postComment(dishId, rating, author, comment)),\r\n  postFeedback: (firstname, lastname, telnum, email, agree, contactType, message) => dispatch(postFeedback(firstname, lastname, telnum, email, agree, contactType, message)),\r\n  fetchDishes: () =>  dispatch(fetchDishes()),\r\n  resetFeedbackForm: () => { dispatch(actions.reset('feedback'))},\r\n  fetchPromos: () => dispatch(fetchPromos()),\r\n  fetchComments: () => dispatch(fetchComments()),\r\n  fetchLeaders: () => dispatch(fetchLeaders())\r\n});\r\n\r\n\r\nclass Main extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n  \r\n  componentDidMount() {\r\n    this.props.fetchDishes();\r\n    this.props.fetchComments();\r\n    this.props.fetchPromos();\r\n    this.props.fetchLeaders();\r\n  }\r\n\r\n  render() {\r\n    const DishWithId = ({match}) => {\r\n      return(\r\n        <DishDetail dish={this.props.dishes.dishes.filter((dish) => dish.id === parseInt(match.params.dishId,10))[0]} \r\n            isLoading={this.props.dishes.isLoading}\r\n            errMess={this.props.dishes.errMess}\r\n            comments={this.props.comments.comments.filter((comment) => comment.dishId === parseInt(match.params.dishId,10))}\r\n            commentsErrMess={this.props.comments.errMess}\r\n            postComment={this.props.postComment} />\r\n      );\r\n    };\r\n\r\n    const HomePage = () => {\r\n        return(\r\n            <Home \r\n            dish={this.props.dishes.dishes.filter((dish) => dish.featured)[0]}\r\n            dishesLoading={this.props.dishes.isLoading}\r\n            dishErrMess={this.props.dishes.errMess}\r\n            promotion={this.props.promotions.promotions.filter((promo) => promo.featured)[0]}\r\n            promoLoading={this.props.promotions.isLoading}\r\n            promoErrMess={this.props.promotions.errMess}\r\n            leader={this.props.leaders.leaders.filter((leader) => leader.featured)[0]}\r\n            leadersLoading={this.props.leaders.isLoading}\r\n            leadersErrMess={this.props.leaders.errMess}\r\n        />\r\n        );\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <Header />\r\n        <TransitionGroup>\r\n          <CSSTransition key={this.props.location.key} classNames=\"page\" timeout={300}>\r\n              <Switch>\r\n                <Route path='/home' component={HomePage} />\r\n                <Route exact path='/menu' component={() => <Menu dishes={this.props.dishes} />}/>\r\n                <Route path='/menu/:dishId' component={DishWithId} />\r\n                <Route exact path='/aboutus' component={() => <About leaders={this.props.leaders}\r\n                    leadersLoading={this.props.leaders.isLoading}\r\n                    leadersErrMess={this.props.leaders.errMess} />} />\r\n                <Route exact path='/contactus' component={() => \r\n                  <Contact resetFeedbackForm={this.props.resetFeedbackForm} \r\n                    postFeedback={this.props.postFeedback} />} />\r\n                <Redirect to='/home' />\r\n              </Switch>\r\n          </CSSTransition>\r\n        </TransitionGroup>\r\n        <Footer />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Main));","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Dishes = (state = {\r\n    isLoading: true,\r\n    errMess: null, \r\n    dishes: []\r\n}, action) => {\r\n    switch(action.type) {\r\n        case ActionTypes.ADD_DISHES:\r\n            return {...state, isLoading: false, errMess: null, dishes: action.payload};\r\n\r\n        case ActionTypes.DISHES_LOADING:\r\n            return {...state, isLoading: true, errMess: null, dishes: []};\r\n\r\n        case ActionTypes.DISHES_FAILED:\r\n            return {...state, isLoading: false, errMess: action.payload};\r\n            \r\n        default:\r\n            return state;\r\n    }\r\n}","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Comments = (state = { errMess: null, comments:[]}, action) =>{\r\n    switch(action.type) {\r\n        case ActionTypes.ADD_COMMENTS:\r\n            return {...state, errMess: null, comments: action.payload};\r\n\r\n        case ActionTypes.COMMENTS_FAILED:\r\n        return {...state, errMess: action.payload};\r\n\r\n        case ActionTypes.ADD_COMMENT:\r\n            var comment = action.payload;\r\n            return { ...state, comments: state.comments.concat(comment)};\r\n            \r\n        default:\r\n            return state;\r\n    }\r\n}","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Leaders = (state = { isLoading: true,\r\n    errMess: null,\r\n    leaders:[]}, action) => {\r\n    switch(action.type) {\r\n        case ActionTypes.ADD_LEADERS:\r\n            return {...state, isLoading: false, errMess: null, leaders: action.payload};\r\n\r\n        case ActionTypes.LEADERS_LOADING:\r\n            return {...state, isLoading: true, errMess: null, leaders: []};\r\n\r\n        case ActionTypes.LEADERS_FAILED:\r\n            return {...state, isLoading: false, errMess: action.payload};\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Promotions = (state  = { isLoading: true,\r\n    errMess: null,\r\n    promotions:[]}, action) => {\r\n        switch (action.type) {\r\n            case ActionTypes.ADD_PROMOS:\r\n                return {...state, isLoading: false, errMess: null, promotions: action.payload};\r\n\r\n            case ActionTypes.PROMOS_LOADING:\r\n                return {...state, isLoading: true, errMess: null, promotions: []};\r\n\r\n            case ActionTypes.PROMOS_FAILED:\r\n                return {...state, isLoading: false, errMess: action.payload};\r\n\r\n            default:\r\n            return state;\r\n        }   \r\n};","export const InitialFeedback = {\r\n    firstname: '',\r\n    lastname: '',\r\n    email: '',\r\n    telnum: '',\r\n    agree: false,\r\n    contactType: 'Tel.',\r\n    message: ''\r\n};","import React from 'react';\nimport Main from './components/MainComponent';\nimport './App.css';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { ConfigureStore } from './redux/configureStore';\n\nconst store = ConfigureStore();\n\nclass App extends React.Component {\n\n  render() {\n    return (\n      <Provider store={store}>\n        <BrowserRouter>\n          <div className=\"App\">\n            <Main />\n          </div>\n        </BrowserRouter>\n      </Provider>\n    );\n  }\n}\n\nexport default App;","import { createStore, combineReducers, applyMiddleware } from 'redux';\r\nimport { createForms } from 'react-redux-form';\r\nimport { Dishes } from './dishes';\r\nimport { Comments } from './comments';\r\nimport { Leaders } from './leaders';\r\nimport { Promotions } from './promotions';\r\nimport {InitialFeedback } from './forms';\r\nimport thunk from 'redux-thunk';\r\nimport logger from 'redux-logger';\r\n\r\nexport const ConfigureStore = () => {\r\n    const store = createStore (\r\n        combineReducers({\r\n            dishes: Dishes,\r\n            comments: Comments,\r\n            promotions: Promotions,\r\n            leaders: Leaders,\r\n            ...createForms({\r\n                feedback: InitialFeedback\r\n            })\r\n        }),\r\n        applyMiddleware(thunk, logger)\r\n    );\r\n\r\n    return store;\r\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'font-awesome/css/font-awesome.css';\nimport 'bootstrap-social/bootstrap-social.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}